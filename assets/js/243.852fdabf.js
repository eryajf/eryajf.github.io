(window.webpackJsonp=window.webpackJsonp||[]).push([[243],{586:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("我最近开源的 "),s("a",{attrs:{href:"https://github.com/eryajf/awesome-ops",target:"_blank",rel:"noopener noreferrer"}},[t._v("awesome-ops"),s("OutboundLink")],1),t._v(" 项目，其中的项目分类及表格数据的生成，依赖 "),s("a",{attrs:{href:"https://github.com/eryajf/yaml-readme",target:"_blank",rel:"noopener noreferrer"}},[t._v("yaml-readme"),s("OutboundLink")],1),t._v(" 这个项目所实现的 action 来完成。因此，其中的项目都是基于大量 yaml 来收集，在于 yaml 打交道的过程中，不可避免的会遇到错漏的情况，这个时候，增加一个 yaml 语法检测的 action 就势在必行了。")]),t._v(" "),s("p",[t._v("当我有了这个念头之后，就针对这方面的 action 进行了一大波调研，发现市场上有许多对应的 action，真正好用的并不多，因此，在花了一两个小时之后，才发掘到了本文将要介绍的 action，如果你也有此类场景与需求，那么就往下读吧。")]),t._v(" "),s("h2",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("p",[t._v("所用 Actions。")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/GrantBirki/json-yaml-validate",target:"_blank",rel:"noopener noreferrer"}},[t._v("json-yaml-validate"),s("OutboundLink")],1),t._v(":用于快速验证存储库中的 JSON 和 YAML 文件的 GitHub Action")])]),t._v(" "),s("p",[t._v("使用配置其实非常简单，基本上阅读完官方介绍文档就可以上手使用了。")]),t._v(" "),s("p",[t._v("我这里就以自己"),s("a",{attrs:{href:"https://github.com/eryajf/awesome-ops/blob/main/.github/workflows/yaml-lint.yml",target:"_blank",rel:"noopener noreferrer"}},[t._v("项目中所用的配置"),s("OutboundLink")],1),t._v("进行说明：")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yaml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("validate\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" main\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pull_request")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflow_dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("permissions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("contents")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" read\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pull-requests")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" write "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enable write permissions for pull request comments")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("json-yaml-validate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v4\n\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("yaml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("validate\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("yaml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("validate\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" GrantBirki/json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("yaml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("validate@v2.6.0 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# replace with the latest version")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("comment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enable comment mode")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("base_dir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"items"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br")])]),s("p",[t._v("其中所用到的参数也比较简单，这里做几点说明：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("pull_request:")]),t._v(" 在触发条件中记得配置此项，从而实现项目再接收到 pr 时自动对项目内的文件进行语法检测。如果失败则无法进行正常 pr，从而实现协作者自行确保提交内容格式正确的义务。")]),t._v(" "),s("li",[s("code",[t._v("comment:")]),t._v(" 当检测失败时，该 action 会自动将检测到的错误通过评论的形式呈现在对应 pr 的评论区，非常优雅。")]),t._v(" "),s("li",[s("code",[t._v("base_dir:")]),t._v(" 指定将要扫描的路径，如果不配置，则默认扫描所有后缀符合 yaml 或 json 的文件。")])]),t._v(" "),s("p",[t._v("只需如上简单配置即可实现想要的效果。")]),t._v(" "),s("p",[t._v("当然该 action 还有其他一些参数，你可以"),s("a",{attrs:{href:"https://github.com/GrantBirki/json-yaml-validate#inputs-",target:"_blank",rel:"noopener noreferrer"}},[t._v("点此"),s("OutboundLink")],1),t._v("进行了解。")]),t._v(" "),s("h2",{attrs:{id:"效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效果"}},[t._v("#")]),t._v(" 效果")]),t._v(" "),s("p",[t._v("正常情况下，执行成功就会显示通过，如果扫描到语法有问题，则会通过评论的形式在 pr 中，呈现效果如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://t.eryajf.net/imgs/2024/01/1705825109676.png",alt:""}})]),t._v(" "),s("p",[t._v("我这里所用到的是 yaml 的语法检测，它还支持 json 语法的检测，如果你也有类似场景，就快应用起来吧。")])])}),[],!1,null,null,null);s.default=e.exports}}]);