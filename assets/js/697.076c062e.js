(window.webpackJsonp=window.webpackJsonp||[]).push([[697],{1041:function(_,t,v){"use strict";v.r(t);var a=v(0),r=Object(a.a)({},(function(){var _=this,t=_._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"_1-网络协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-网络协议"}},[_._v("#")]),_._v(" 1，网络协议")]),_._v(" "),t("p",[_._v("从应用的角度出发，协议可理解为“规则”，是数据传输和数据的解释的规则。")]),_._v(" "),t("p",[_._v("假设，A、B 双方欲传输文件。规定：")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("第一次，传输文件名，接收方接收到文件名，应答 OK 给传输方；")])]),_._v(" "),t("li",[t("p",[_._v("第二次，发送文件的尺寸，接收方接收到该数据再次应答一个 OK；")])]),_._v(" "),t("li",[t("p",[_._v("第三次，传输文件内容。同样，接收方接收数据完成后应答 OK 表示文件内容接收成功。")])])]),_._v(" "),t("p",[_._v("由此，无论 A、B 之间传递何种文件，都是通过三次数据传输来完成。A、B 之间形成了一个最简单的数据传输规则。双方都按此规则发送、接收数据。A、B 之间达成的这个相互遵守的规则即为协议。")]),_._v(" "),t("p",[_._v("这种仅在 A、B 之间被遵守的协议称之为"),t("code",[_._v("原始协议")]),_._v("。")]),_._v(" "),t("p",[_._v("当此协议被更多的人采用，不断的增加、改进、维护、完善。最终形成一个稳定的、完整的文件传输协议，被广泛应用于各种文件传输过程中。该协议就成为一个"),t("code",[_._v("标准协议")]),_._v("。最早的 ftp 协议就是由此衍生而来。")]),_._v(" "),t("h2",{attrs:{id:"_2-分层模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-分层模型"}},[_._v("#")]),_._v(" 2，分层模型")]),_._v(" "),t("h3",{attrs:{id:"_1-网络分层架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-网络分层架构"}},[_._v("#")]),_._v(" 1，网络分层架构")]),_._v(" "),t("p",[_._v("为了减少协议设计的复杂性，大多数网络模型均采用分层的方式来组织。每一层都有自己的功能，就像建筑物一样，每一层都靠下一层支持。"),t("strong",[_._v("每一层利用下一层提供的服务来为上一层提供服务，本层服务的实现细节对上层屏蔽。")])]),_._v(" "),t("p",[t("img",{attrs:{src:"http://t.eryajf.net/imgs/2021/09/0c342a3380a331a6.jpg",alt:"1560660163327"}})]),_._v(" "),t("p",[_._v("越下面的层，越靠近硬件；越上面的层，越靠近用户。至于每一层叫什么名字，其实并不重要（面试的时候，面试官可能会问每一层的名字）。只需要知道，互联网分成若干层即可。")]),_._v(" "),t("ul",[t("li",[t("p",[t("strong",[_._v("1)物理层")]),_._v("：主要定义物理设备标准，如网线的接口类型、光纤的接口类型、各种传输介质的传输速率等。它的主要作用是传输比特流（就是由 1、0 转化为电流强弱来进行传输，到达目的地后再转化为 1、0，也就是我们常说的数模转换与模数转换）。这一层的数据叫做比特。")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("2)数据链路层")]),_._v("：定义了如何让格式化数据以帧为单位进行传输，以及如何让控制对物理介质的访问。这一层通常还提供错误检测和纠正，以确保数据的可靠传输。如：串口通信中使用到的 115200、8、N、1")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("3)网络层")]),_._v("：在位于不同地理位置的网络中的两个主机系统之间提供连接和路径选择。Internet 的发展使得从世界各站点访问信息的用户数大大增加，而网络层正是管理这种连接的层。")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("4)传输层")]),_._v("：定义了一些传输数据的协议和端口号（WWW 端口 80 等），如：TCP（传输控制协议，传输效率低，可靠性强，用于传输可靠性要求高，数据量大的数据），UDP（用户数据报协议，与 TCP 特性恰恰相反，用于传输可靠性要求不高，数据量小的数据，如 QQ 聊天数据就是通过这种方式传输的）。 主要是将从下层接收的数据进行分段和传输，到达目的地址后再进行重组。常常把这一层数据叫做段。")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("5)会话层")]),_._v("：通过传输层(端口号：传输端口与接收端口)建立数据传输的通路。主要在你的系统之间发起会话或者接受会话请求（设备之间需要互相认识可以是 IP 也可以是 MAC 或者是主机名）。")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("6)表示层")]),_._v("：可确保一个系统的应用层所发送的信息可以被另一个系统的应用层读取。例如，PC 程序与另一台计算机进行通信，其中一台计算机使用扩展二一十进制交换码(EBCDIC)，而另一台则使用美国信息交换标准码（ASCII）来表示相同的字符。如有必要，表示层会通过使用一种通格式来实现多种数据格式之间的转换。")])]),_._v(" "),t("li",[t("p",[t("strong",[_._v("7)应用层")]),_._v("：是最靠近用户的 OSI 层。这一层为用户的应用程序（例如电子邮件、文件传输和终端仿真）提供网络服务。")])])]),_._v(" "),t("h3",{attrs:{id:"_2-层与协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-层与协议"}},[_._v("#")]),_._v(" 2，层与协议")]),_._v(" "),t("p",[_._v("每一层都是为了完成一种功能，为了实现这些功能，就需要大家都遵守共同的规则。大家都遵守这规则，就叫做“协议”（protocol）。")]),_._v(" "),t("p",[_._v("网络的每一层，都定义了很多协议。这些协议的总称，叫“TCP/IP 协议”。TCP/IP 协议是一个大家族，不仅仅只有 TCP 和 IP 协议，它还包括其它的协议，如下图：")]),_._v(" "),t("p",[t("img",{attrs:{src:"http://t.eryajf.net/imgs/2021/09/403d044c19746a45.jpg",alt:"1560660271350"}})]),_._v(" "),t("h3",{attrs:{id:"_3-每层协议的功能。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-每层协议的功能。"}},[_._v("#")]),_._v(" 3，每层协议的功能。")]),_._v(" "),t("p",[t("img",{attrs:{src:"http://t.eryajf.net/imgs/2021/09/6b96cf8734feed54.jpg",alt:"1560661942712"}})]),_._v(" "),t("h4",{attrs:{id:"_1-链路层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-链路层"}},[_._v("#")]),_._v(" 1，链路层")]),_._v(" "),t("p",[_._v("**以太网规定，连入网络的所有设备，都必须具有“网卡”接口。**数据包必须是从一块网卡，传送到另一块网卡。通过网卡能够使不同的计算机之间连接，从而完成数据通信等功能。网卡的地址——MAC 地址，就是数据包的物理发送地址和物理接收地址。")]),_._v(" "),t("h4",{attrs:{id:"_2-网络层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-网络层"}},[_._v("#")]),_._v(" 2，网络层")]),_._v(" "),t("p",[_._v("网络层的作用是引进一套新的地址，使得我们能够区分不同的计算机是否属于同一个子网络。这套地址就叫做“网络地址”，这是我们平时所说的 IP 地址。这个 IP 地址好比我们的手机号码，通过手机号码可以得到用户所在的归属地。")]),_._v(" "),t("p",[_._v("网络地址帮助我们确定计算机所在的子网络，MAC 地址则将数据包送到该子网络中的目标网卡。网络层协议包含的主要信息是源 IP 和目的 IP。")]),_._v(" "),t("p",[_._v("于是，“网络层”出现以后，每台计算机有了两种地址，**一种是 MAC 地址，另一种是网络地址。**两种地址之间没有任何联系，MAC 地址是绑定在网卡上的，网络地址则是管理员分配的，它们只是随机组合在一起。")]),_._v(" "),t("p",[_._v("网络地址帮助我们确定计算机所在的子网络，MAC 地址则将数据包送到该子网络中的目标网卡。因此，从逻辑上可以推断，必定是先处理网络地址，然后再处理 MAC 地址。")]),_._v(" "),t("h4",{attrs:{id:"_3-传输层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-传输层"}},[_._v("#")]),_._v(" 3，传输层")]),_._v(" "),t("p",[_._v("当我们一边聊 QQ，一边聊微信，当一个数据包从互联网上发来的时候，我们怎么知道，它是来自 QQ 的内容，还是来自微信的内容？")]),_._v(" "),t("p",[_._v("也就是说，我们还需要一个参数，表示这个数据包到底供哪个程序（进程）使用。这个参数就叫做“端口”（port），它其实是每一个使用网卡的程序的编号。每个数据包都发到主机的特定端口，所以不同的程序就能取到自己所需要的数据。")]),_._v(" "),t("p",[_._v("端口特点：")]),_._v(" "),t("ul",[t("li",[_._v("对于同一个端口，在不同系统中对应着不同的进程")]),_._v(" "),t("li",[_._v("对于同一个系统，一个端口只能被一个进程拥有")])]),_._v(" "),t("h4",{attrs:{id:"_4-应用层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-应用层"}},[_._v("#")]),_._v(" 4，应用层")]),_._v(" "),t("p",[_._v("应用程序收到“传输层”的数据，接下来就要进行解读。由于互联网是开放架构，数据来源五花八门，必须事先规定好格式，否则根本无法解读。“应用层”的作用，就是规定应用程序的数据格式。")])])}),[],!1,null,null,null);t.default=r.exports}}]);