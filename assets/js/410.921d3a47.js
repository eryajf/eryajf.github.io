(window.webpackJsonp=window.webpackJsonp||[]).push([[410],{752:function(v,e,_){"use strict";_.r(e);var t=_(0),r=Object(t.a)({},(function(){var v=this,e=v._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"_1-感谢原作者。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-感谢原作者。"}},[v._v("#")]),v._v(" 1，感谢原作者。")]),v._v(" "),e("p",[v._v("某日下午，打算再一次手动搭建 k8s 的 1.10 版本，在网上搜索的时候，发现了如下开源地址：https://github.com/opsnull/follow-me-install-kubernetes-cluster ，当即就被其吸引，然后就给身边小伙伴进行分享，我当时还打趣对他说，我有一个预感了，他说什么预感，我说我预感今天晚上将是一个不眠夜了。")]),v._v(" "),e("p",[v._v("说这话一方面是因为我看到教程的 PDF 版本全文达到了一百七十多页，十分夸张，另一方面，我已暗下决心，打算追看下去，事实上，那天晚上的确是追到了两点多才下班回家，虽然没有把教程全部追完，但是也已经大有收获，大有学习了，在此，再一次，认真，隆重的感谢原作者，感谢他的这种开源以及认真努力（据教程中所见，貌似作者是凌晨四点完成的文档）的精神。")]),v._v(" "),e("p",[v._v("我所分享的，并未完全按照原来的文档内容，而是经过自己的部署，自己的理解，进行整理，编辑而成的，使之更加容易阅读，也更加容易理解一些，毕竟对于自己这种刚入门的情况来说，写的越详细，就会越容易领略其中精髓吧。")]),v._v(" "),e("p",[e("img",{attrs:{src:"http://t.eryajf.net/imgs/2021/09/71fffb15e0c9f5f9.jpg",alt:"image"}})]),v._v(" "),e("p",[v._v("接下来进入正式内容的分享。")]),v._v(" "),e("h2",{attrs:{id:"_2-组件版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件版本"}},[v._v("#")]),v._v(" 2，组件版本")]),v._v(" "),e("ul",[e("li",[v._v("Kubernetes 1.10.4")]),v._v(" "),e("li",[v._v("Docker 18.03.1-ce")]),v._v(" "),e("li",[v._v("Etcd 3.3.7")]),v._v(" "),e("li",[v._v("Flanneld 0.10.0")]),v._v(" "),e("li",[v._v("插件：\n"),e("ul",[e("li",[v._v("Coredns")]),v._v(" "),e("li",[v._v("Dashboard")]),v._v(" "),e("li",[v._v("Heapster (influxdb、grafana)")]),v._v(" "),e("li",[v._v("Metrics-Server")]),v._v(" "),e("li",[v._v("EFK (elasticsearch、fluentd、kibana)")])])]),v._v(" "),e("li",[v._v("镜像仓库：\n"),e("ul",[e("li",[v._v("docker registry")]),v._v(" "),e("li",[v._v("harbor")])])])]),v._v(" "),e("h2",{attrs:{id:"_3-主要配置策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-主要配置策略"}},[v._v("#")]),v._v(" 3，主要配置策略")]),v._v(" "),e("p",[e("code",[v._v("kube-apiserver：")])]),v._v(" "),e("ul",[e("li",[v._v("使用 keepalived 和 haproxy 实现 3 节点高可用；")]),v._v(" "),e("li",[v._v("关闭非安全端口 8080 和匿名访问；")]),v._v(" "),e("li",[v._v("在安全端口 6443 接收 https 请求；")]),v._v(" "),e("li",[v._v("严格的认证和授权策略 (x509、token、RBAC)；")]),v._v(" "),e("li",[v._v("开启 bootstrap token 认证，支持 kubelet TLS bootstrapping；")]),v._v(" "),e("li",[v._v("使用 https 访问 kubelet、etcd，加密通信；")])]),v._v(" "),e("p",[e("code",[v._v("kube-controller-manager：")])]),v._v(" "),e("ul",[e("li",[v._v("3 节点高可用；")]),v._v(" "),e("li",[v._v("关闭非安全端口，在安全端口 10252 接收 https 请求；")]),v._v(" "),e("li",[v._v("使用 kubeconfig 访问 apiserver 的安全端口；")]),v._v(" "),e("li",[v._v("自动 approve kubelet 证书签名请求 (CSR)，证书过期后自动轮转；")]),v._v(" "),e("li",[v._v("各 controller 使用自己的 ServiceAccount 访问 apiserver；")])]),v._v(" "),e("p",[e("code",[v._v("kube-scheduler：")])]),v._v(" "),e("ul",[e("li",[v._v("3 节点高可用；")]),v._v(" "),e("li",[v._v("使用 kubeconfig 访问 apiserver 的安全端口；")])]),v._v(" "),e("p",[e("code",[v._v("kubelet：")])]),v._v(" "),e("ul",[e("li",[v._v("使用 kubeadm 动态创建 bootstrap token，而不是在 apiserver 中静态配置；")]),v._v(" "),e("li",[v._v("使用 TLS bootstrap 机制自动生成 client 和 server 证书，过期后自动轮转；")]),v._v(" "),e("li",[v._v("在 KubeletConfiguration 类型的 JSON 文件配置主要参数；")]),v._v(" "),e("li",[v._v("关闭只读端口，在安全端口 10250 接收 https 请求，对请求进行认证和授权，拒绝匿名访问和非授权访问；")]),v._v(" "),e("li",[v._v("使用 kubeconfig 访问 apiserver 的安全端口；")])]),v._v(" "),e("p",[e("code",[v._v("kube-proxy：")])]),v._v(" "),e("ul",[e("li",[v._v("使用 kubeconfig 访问 apiserver 的安全端口；")]),v._v(" "),e("li",[v._v("在 KubeProxyConfiguration 类型的 JSON 文件配置主要参数；")]),v._v(" "),e("li",[v._v("使用 ipvs 代理模式；")])]),v._v(" "),e("p",[e("code",[v._v("集群插件：")])]),v._v(" "),e("ul",[e("li",[v._v("DNS：使用功能、性能更好的 coredns；")]),v._v(" "),e("li",[v._v("Dashboard：支持登录认证；")]),v._v(" "),e("li",[v._v("Metric：heapster、metrics-server，使用 https 访问 kubelet 安全端口；")]),v._v(" "),e("li",[v._v("Log：Elasticsearch、Fluend、Kibana；")]),v._v(" "),e("li",[v._v("Registry 镜像库：docker-registry、harbor；")])])])}),[],!1,null,null,null);e.default=r.exports}}]);